<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  <!--配置启动spring容器，比如数据源 事务控制等-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <!--ContextLoaderListener 监听器
  启动web容器时，自动装配ApplicationContext的配置消息
  实现了ServletContextListener接口 在web.xml配置该监听器，启动容器时，会默认执行它实现的方法
  -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--配置前端控制器/中央控制器/分发控制器
    1.用户的请求都会经过它的处理
    没有指定springmvc的配置文件，就会默认按照servlet-name-servlet.xml 来获取
    -->
  <servlet>
    <servlet-name>springDispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--老师解读
    1. 如果我们没有配置 contextConfigLocation
    2. 默认按照这样的位置去定位spring配置文件 /WEB-INF/springDispatcherServlet-servlet.xml
    -->
    <!--配置属性 contextConfigLocation, 指定DispatcherServlet 去操作的spring配置文件-->
    <!--<init-param>-->
    <!--    <param-name>contextConfigLocation</param-name>-->
    <!--    <param-value>classpath:applicationContext-mvc.xml</param-value>-->
    <!--</init-param>-->
    <!--在web项目启动时，就自动的加载DispatcherServlet-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springDispatcherServlet</servlet-name>
    <!--老师说明
    1. 这里我们配置的url-pattern是 / ,表示用户的请求都经过 DispatcherServlet
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--配置Spring提供的过滤器，解决中文乱码问题
  1.forceRequestEncoding 配置成true 表示该过滤器会执行request.setCharacterEncoding(encode)
  2.forceResponseEncoding 配置成true 表示返回语句也会request.setCharacterEncoding(encode)
  -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceRequestEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>forceResponseEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--配置HiddenHttpMethodFilter
      1. 使用Rest风格URI 作用是把以post方式提交的delete和put请求进行转换
      2. 配置url-pattern 是 /* 表示请求都经过 hiddenHttpMethodFilter过滤
      -->
  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>


